// <auto-generated />
using System;
using AllowanceApp.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AllowanceApp.Data.Migrations
{
    [DbContext(typeof(AccountContext))]
    [Migration("20250824022749_SeparateAllowanceTable")]
    partial class SeparateAllowanceTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("AllowanceApp.Core.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AllowanceApp.Core.Models.Account", b =>
                {
                    b.OwnsOne("AllowanceApp.Core.Models.AllowanceData", "Allowance", b1 =>
                        {
                            b1.Property<int>("AccountID")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("BasePay")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("REAL")
                                .HasDefaultValue(5.0);

                            b1.Property<int>("ID")
                                .HasColumnType("INTEGER");

                            b1.Property<DateOnly>("LastPayout")
                                .HasColumnType("TEXT");

                            b1.HasKey("AccountID");

                            b1.ToTable("Allowances", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AccountID");

                            b1.OwnsMany("AllowanceApp.Core.Models.PointType", "PayList", b2 =>
                                {
                                    b2.Property<int>("AccountID")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Category")
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("Points")
                                        .HasColumnType("INTEGER");

                                    b2.Property<double>("Price")
                                        .HasColumnType("REAL");

                                    b2.HasKey("AccountID", "Category");

                                    b2.ToTable("PointType");

                                    b2.WithOwner()
                                        .HasForeignKey("AccountID");
                                });

                            b1.Navigation("PayList");
                        });

                    b.OwnsMany("AllowanceApp.Core.Models.Transaction", "Transactions", b1 =>
                        {
                            b1.Property<int>("ID")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("AccountID")
                                .HasColumnType("INTEGER");

                            b1.Property<double>("Amount")
                                .HasColumnType("REAL");

                            b1.Property<DateOnly>("Date")
                                .HasColumnType("TEXT");

                            b1.HasKey("ID");

                            b1.HasIndex("AccountID");

                            b1.ToTable("Transaction");

                            b1.WithOwner()
                                .HasForeignKey("AccountID");
                        });

                    b.Navigation("Allowance")
                        .IsRequired();

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
